# Generated by Django 4.2 on 2025-05-23 06:25

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('warehouse', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryCount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count_number', models.CharField(max_length=50, unique=True, verbose_name='盘点单号')),
                ('count_scope', models.CharField(choices=[('all', '全盘'), ('location', '按库位'), ('category', '按分类'), ('product', '按商品')], max_length=20, verbose_name='盘点范围')),
                ('scope_filter', models.JSONField(blank=True, null=True, verbose_name='范围过滤条件')),
                ('status', models.CharField(choices=[('draft', '草稿'), ('counting', '盘点中'), ('completed', '已完成'), ('cancelled', '已取消')], default='draft', max_length=20, verbose_name='状态')),
                ('planned_start_at', models.DateTimeField(verbose_name='计划开始时间')),
                ('planned_end_at', models.DateTimeField(verbose_name='计划结束时间')),
                ('actual_start_at', models.DateTimeField(blank=True, null=True, verbose_name='实际开始时间')),
                ('actual_end_at', models.DateTimeField(blank=True, null=True, verbose_name='实际结束时间')),
                ('total_items', models.IntegerField(default=0, verbose_name='盘点条目数')),
                ('completed_items', models.IntegerField(default=0, verbose_name='已盘点条目数')),
                ('variance_items', models.IntegerField(default=0, verbose_name='差异条目数')),
                ('description', models.TextField(blank=True, null=True, verbose_name='盘点说明')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('count_leader', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='led_counts', to=settings.AUTH_USER_MODEL, verbose_name='盘点负责人')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_counts', to=settings.AUTH_USER_MODEL, verbose_name='创建人')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.warehouse', verbose_name='盘点仓库')),
            ],
            options={
                'verbose_name': '库存盘点',
                'verbose_name_plural': '库存盘点',
                'db_table': 'inventory_count',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, verbose_name='库存数量')),
                ('available_quantity', models.IntegerField(default=0, verbose_name='可用数量')),
                ('reserved_quantity', models.IntegerField(default=0, verbose_name='预留数量')),
                ('frozen_quantity', models.IntegerField(default=0, verbose_name='冻结数量')),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='批次号')),
                ('production_date', models.DateField(blank=True, null=True, verbose_name='生产日期')),
                ('expiry_date', models.DateField(blank=True, null=True, verbose_name='过期日期')),
                ('unit_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='单位成本')),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='总成本')),
                ('status', models.CharField(choices=[('normal', '正常'), ('frozen', '冻结'), ('damaged', '损坏'), ('expired', '过期'), ('quarantine', '隔离')], default='normal', max_length=20, verbose_name='状态')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('last_movement_at', models.DateTimeField(blank=True, null=True, verbose_name='最后变动时间')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.location', verbose_name='库位')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='商品')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.warehouse', verbose_name='仓库')),
            ],
            options={
                'verbose_name': '库存',
                'verbose_name_plural': '库存',
                'db_table': 'inventory_stock',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='StockReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reserved_quantity', models.IntegerField(verbose_name='预留数量')),
                ('reserved_at', models.DateTimeField(auto_now_add=True, verbose_name='预留时间')),
                ('reference_type', models.CharField(max_length=20, verbose_name='关联类型')),
                ('reference_id', models.CharField(max_length=50, verbose_name='关联ID')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='关联单号')),
                ('status', models.CharField(choices=[('active', '生效中'), ('used', '已使用'), ('expired', '已过期'), ('cancelled', '已取消')], default='active', max_length=10, verbose_name='状态')),
                ('expire_at', models.DateTimeField(blank=True, null=True, verbose_name='过期时间')),
                ('used_at', models.DateTimeField(blank=True, null=True, verbose_name='使用时间')),
                ('cancelled_at', models.DateTimeField(blank=True, null=True, verbose_name='取消时间')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('reserved_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='预留人')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.stock', verbose_name='库存')),
            ],
            options={
                'verbose_name': '库存预留',
                'verbose_name_plural': '库存预留',
                'db_table': 'inventory_stock_reservation',
                'ordering': ['-reserved_at'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('inbound', '入库'), ('outbound', '出库'), ('transfer', '调拨'), ('adjust', '调整'), ('freeze', '冻结'), ('unfreeze', '解冻'), ('damage', '损耗'), ('return', '退货'), ('count', '盘点')], max_length=20, verbose_name='变动类型')),
                ('quantity', models.IntegerField(verbose_name='变动数量')),
                ('before_quantity', models.IntegerField(default=0, verbose_name='变动前数量')),
                ('after_quantity', models.IntegerField(default=0, verbose_name='变动后数量')),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='批次号')),
                ('unit_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='单位成本')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='总成本')),
                ('reference_type', models.CharField(blank=True, max_length=20, null=True, verbose_name='关联单据类型')),
                ('reference_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='关联单据ID')),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='关联单据号')),
                ('operation_time', models.DateTimeField(auto_now_add=True, verbose_name='操作时间')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.location', verbose_name='库位')),
                ('operator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='操作人')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='商品')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.warehouse', verbose_name='仓库')),
            ],
            options={
                'verbose_name': '库存变动',
                'verbose_name_plural': '库存变动',
                'db_table': 'inventory_stock_movement',
                'ordering': ['-operation_time'],
            },
        ),
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('low_stock', '库存不足'), ('overstock', '库存过量'), ('near_expiry', '临近过期'), ('expired', '已过期'), ('zero_stock', '零库存')], max_length=20, verbose_name='预警类型')),
                ('level', models.CharField(choices=[('low', '低'), ('medium', '中'), ('high', '高'), ('critical', '紧急')], max_length=10, verbose_name='预警级别')),
                ('current_stock', models.IntegerField(verbose_name='当前库存')),
                ('threshold_value', models.IntegerField(blank=True, null=True, verbose_name='阈值')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否有效')),
                ('is_handled', models.BooleanField(default=False, verbose_name='是否已处理')),
                ('handled_at', models.DateTimeField(blank=True, null=True, verbose_name='处理时间')),
                ('message', models.TextField(verbose_name='预警消息')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='处理人')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='商品')),
                ('warehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.warehouse', verbose_name='仓库')),
            ],
            options={
                'verbose_name': '库存预警',
                'verbose_name_plural': '库存预警',
                'db_table': 'inventory_stock_alert',
                'ordering': ['-level', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InventoryCountDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_quantity', models.IntegerField(verbose_name='账面数量')),
                ('actual_quantity', models.IntegerField(blank=True, null=True, verbose_name='实盘数量')),
                ('variance_quantity', models.IntegerField(default=0, verbose_name='差异数量')),
                ('batch_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='批次号')),
                ('status', models.CharField(choices=[('pending', '待盘点'), ('counted', '已盘点'), ('adjusted', '已调整')], default='pending', max_length=20, verbose_name='状态')),
                ('counted_at', models.DateTimeField(blank=True, null=True, verbose_name='盘点时间')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('count', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.inventorycount', verbose_name='盘点单')),
                ('counted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='盘点人')),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.stock', verbose_name='库存')),
            ],
            options={
                'verbose_name': '库存盘点明细',
                'verbose_name_plural': '库存盘点明细',
                'db_table': 'inventory_count_detail',
                'ordering': ['count', 'stock__product__code'],
            },
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['stock'], name='inventory_s_stock_i_52153e_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['reference_type', 'reference_id'], name='inventory_s_referen_daf369_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['status'], name='inventory_s_status_ae583a_idx'),
        ),
        migrations.AddIndex(
            model_name='stockreservation',
            index=models.Index(fields=['expire_at'], name='inventory_s_expire__19314c_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['product', 'warehouse'], name='inventory_s_product_2104c0_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['movement_type'], name='inventory_s_movemen_447eca_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['operation_time'], name='inventory_s_operati_5a793e_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['reference_type', 'reference_id'], name='inventory_s_referen_85b37c_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['product', 'warehouse'], name='inventory_s_product_8beb5f_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['alert_type'], name='inventory_s_alert_t_38bef8_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['level'], name='inventory_s_level_b2b0b3_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['is_active', 'is_handled'], name='inventory_s_is_acti_253513_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['product', 'warehouse'], name='inventory_s_product_112b63_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['location'], name='inventory_s_locatio_bb95d2_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['batch_number'], name='inventory_s_batch_n_527e87_idx'),
        ),
        migrations.AddIndex(
            model_name='stock',
            index=models.Index(fields=['expiry_date'], name='inventory_s_expiry__b1d30a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='stock',
            unique_together={('product', 'warehouse', 'location', 'batch_number')},
        ),
        migrations.AlterUniqueTogether(
            name='inventorycountdetail',
            unique_together={('count', 'stock')},
        ),
    ]
